{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blank\\\\auth-demo\\\\src\\\\HomePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport CryptoJS from 'crypto-js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = ({\n  setMessage,\n  setIsAuthenticated,\n  setUsername\n}) => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const [remainingAttempts, setRemainingAttempts] = useState(null);\n  const [encryptionKey, setEncryptionKey] = useState('');\n  useEffect(() => {\n    const fetchEncryptionKey = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/generate-key', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setEncryptionKey(data.keyHash);\n        } else {\n          console.error('Ошибка при получении хэша ключа');\n        }\n      } catch (error) {\n        console.error('Ошибка сети при получении ключа:', error);\n      }\n    };\n    fetchEncryptionKey();\n  }, []);\n  const onSubmit = async data => {\n    try {\n      const encryptedData = CryptoJS.AES.encrypt(JSON.stringify(data), encryptionKey).toString();\n      const response = await fetch('http://localhost:5000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          encryptedData,\n          encryptionKeyHash: encryptionKey\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setIsAuthenticated(true);\n        setUsername(result.user.username);\n        navigate('/welcome');\n      } else {\n        const result = await response.json();\n        setMessage(result.message || 'Ошибка');\n        if (result.attemptsLeft !== undefined) setRemainingAttempts(result.attemptsLeft);\n      }\n    } catch {\n      setMessage('Ошибка сети');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0412\\u0445\\u043E\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"\\u041B\\u043E\\u0433\\u0438\\u043D:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          ...register('username', {\n            required: 'Логин обязателен'\n          }),\n          className: errors.username ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errors.username.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group password-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? 'text' : 'password',\n            id: \"password\",\n            ...register('password', {\n              required: 'Пароль обязателен'\n            }),\n            className: errors.password ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onMouseDown: () => setShowPassword(true),\n            onMouseUp: () => setShowPassword(false),\n            onMouseLeave: () => setShowPassword(false),\n            className: \"toggle-password-visibility\",\n            children: \"\\uD83D\\uDC41\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errors.password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), remainingAttempts !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"attempts-message\",\n      children: [\"\\u041E\\u0441\\u0442\\u0430\\u043B\\u043E\\u0441\\u044C \\u043F\\u043E\\u043F\\u044B\\u0442\\u043E\\u043A: \", remainingAttempts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0423 \\u0432\\u0430\\u0441 \\u043D\\u0435\\u0442 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430? \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/register'),\n        className: \"link-button\",\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"IzyKvopuUtzGEuCv58XZnHl61nQ=\", false, function () {\n  return [useForm, useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","useForm","useNavigate","CryptoJS","jsxDEV","_jsxDEV","HomePage","setMessage","setIsAuthenticated","setUsername","_s","register","handleSubmit","formState","errors","navigate","showPassword","setShowPassword","remainingAttempts","setRemainingAttempts","encryptionKey","setEncryptionKey","fetchEncryptionKey","response","fetch","method","headers","ok","data","json","keyHash","console","error","onSubmit","encryptedData","AES","encrypt","JSON","stringify","toString","credentials","body","encryptionKeyHash","result","user","username","message","attemptsLeft","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","required","password","onMouseDown","onMouseUp","onMouseLeave","onClick","_c","$RefreshReg$"],"sources":["C:/Users/blank/auth-demo/src/HomePage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport CryptoJS from 'crypto-js';\r\nimport './App.css';\r\n\r\ninterface FormData {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\ninterface HomePageProps {\r\n  setMessage: (message: string) => void;\r\n  setIsAuthenticated: (isAuthenticated: boolean) => void;\r\n  setUsername: (username: string) => void;\r\n}\r\n\r\nconst HomePage: React.FC<HomePageProps> = ({ setMessage, setIsAuthenticated, setUsername }) => {\r\n  const { register, handleSubmit, formState: { errors } } = useForm<FormData>();\r\n  const navigate = useNavigate();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [remainingAttempts, setRemainingAttempts] = useState<number | null>(null);\r\n  const [encryptionKey, setEncryptionKey] = useState('');\r\n  \r\n \r\n\r\n  useEffect(() => {\r\n    const fetchEncryptionKey = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/generate-key', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setEncryptionKey(data.keyHash);\r\n        } else {\r\n          console.error('Ошибка при получении хэша ключа');\r\n        }\r\n      } catch (error) {\r\n        console.error('Ошибка сети при получении ключа:', error);\r\n      }\r\n    };\r\n\r\n    fetchEncryptionKey();\r\n  }, []);\r\n\r\n  const onSubmit = async (data: FormData) => {\r\n    try {\r\n      const encryptedData = CryptoJS.AES.encrypt(JSON.stringify(data), encryptionKey).toString();\r\n      const response = await fetch('http://localhost:5000/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ encryptedData, encryptionKeyHash: encryptionKey }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        setIsAuthenticated(true);\r\n        setUsername(result.user.username);\r\n        navigate('/welcome');\r\n      } else {\r\n        const result = await response.json();\r\n        setMessage(result.message || 'Ошибка');\r\n        if (result.attemptsLeft !== undefined) setRemainingAttempts(result.attemptsLeft);\r\n      }\r\n    } catch {\r\n      setMessage('Ошибка сети');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>Вход</h1>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Логин:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            {...register('username', { required: 'Логин обязателен' })}\r\n            className={errors.username ? 'error' : ''}\r\n          />\r\n          {errors.username && <p className=\"error-message\">{errors.username.message}</p>}\r\n        </div>\r\n        <div className=\"form-group password-group\">\r\n          <label htmlFor=\"password\">Пароль:</label>\r\n          <div className=\"password-input\">\r\n            <input\r\n              type={showPassword ? 'text' : 'password'}\r\n              id=\"password\"\r\n              {...register('password', { required: 'Пароль обязателен' })}\r\n              className={errors.password ? 'error' : ''}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onMouseDown={() => setShowPassword(true)}\r\n              onMouseUp={() => setShowPassword(false)}\r\n              onMouseLeave={() => setShowPassword(false)}\r\n              className=\"toggle-password-visibility\"\r\n            >\r\n              👁️\r\n            </button>\r\n          </div>\r\n          {errors.password && <p className=\"error-message\">{errors.password.message}</p>}\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"submit-button\">Войти</button>\r\n      </form>\r\n      {remainingAttempts !== null && <p className=\"attempts-message\">Осталось попыток: {remainingAttempts}</p>}\r\n      <p>\r\n        У вас нет аккаунта? <button onClick={() => navigate('/register')} className=\"link-button\">Регистрация</button>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}