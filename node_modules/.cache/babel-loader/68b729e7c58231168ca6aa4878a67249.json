{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blank\\\\auth-demo\\\\src\\\\RegisterPage.tsx\";\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport CryptoJS from 'crypto-js';\nimport './App.css';\nconst RegisterPage = React.memo(({\n  setMessage\n}) => {\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    watch\n  } = useForm();\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const [passwordCriteria, setPasswordCriteria] = useState({\n    length: false,\n    uppercase: false,\n    lowercase: false,\n    number: false,\n    specialChar: false\n  });\n  const password = watch('password', '');\n  const [encryptionKey, setEncryptionKey] = useState(null);\n  const fetchEncryptionKey = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/generate-key', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const {\n          keyHash\n        } = await response.json();\n        setEncryptionKey(keyHash);\n      } else {\n        setMessage('Ошибка при получении ключа шифрования');\n      }\n    } catch (error) {\n      setMessage('Ошибка сети при получении ключа шифрования');\n    }\n  };\n  const encryptData = data => {\n    const jsonData = JSON.stringify(data);\n    return CryptoJS.AES.encrypt(jsonData, encryptionKey).toString();\n  };\n  const fetchUserId = async username => {\n    try {\n      const response = await fetch(`http://localhost:5000/get-user-id?username=${username}`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const result = await response.json();\n        return result.userId;\n      } else {\n        setMessage('Ошибка при получении ID пользователя');\n      }\n    } catch (error) {\n      setMessage('Ошибка сети при получении ID пользователя');\n    }\n  };\n  const onSubmit = async data => {\n    const url = 'http://localhost:5000/register';\n    const encryptedData = encryptData(data);\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          encryptedData,\n          encryptionKey\n        })\n      });\n      if (response.ok) {\n        setMessage('Регистрация прошла успешно');\n        const userId = await fetchUserId(data.username);\n        if (userId) {\n          navigate('/additional-data', {\n            state: {\n              userId\n            }\n          });\n        }\n      } else {\n        const result = await response.json();\n        setMessage(result.message || 'Ошибка при регистрации');\n      }\n    } catch (error) {\n      setMessage('Ошибка сети при регистрации');\n    }\n  };\n  useEffect(() => {\n    fetchEncryptionKey();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    setMessage('');\n  }, [setMessage]);\n  const checkPasswordCriteria = useCallback(value => {\n    setPasswordCriteria({\n      length: value.length >= 8,\n      uppercase: /[A-Z]/.test(value),\n      lowercase: /[a-z]/.test(value),\n      number: /\\d/.test(value),\n      specialChar: /[!@#$%^&*(),.?\":{}|<>]/.test(value)\n    });\n  }, []);\n  useEffect(() => {\n    checkPasswordCriteria(password);\n  }, [password, checkPasswordCriteria]);\n  const validateUsername = value => {\n    const isValid = /^[A-Za-z0-9_]+$/.test(value);\n    if (!isValid) {\n      return 'Логин может содержать только буквы, цифры и символ \"_\"';\n    }\n    return true;\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, \"\\u041B\\u043E\\u0433\\u0438\\u043D:\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    id: \"username\"\n  }, register('username', {\n    required: 'Логин обязателен',\n    validate: validateUsername\n  }), {\n    className: errors.username ? 'error' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  })), errors.username && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 31\n    }\n  }, errors.username.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group password-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"password-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: showPassword ? 'text' : 'password',\n    id: \"password\"\n  }, register('password', {\n    required: 'Пароль обязателен'\n  }), {\n    className: errors.password ? 'error' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onMouseDown: () => setShowPassword(true),\n    onMouseUp: () => setShowPassword(false),\n    onMouseLeave: () => setShowPassword(false),\n    className: \"toggle-password-visibility\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDC41\\uFE0F\")), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 31\n    }\n  }, errors.password.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"password-requirements\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, \"\\u0422\\u0440\\u0435\\u0431\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\u043A \\u043F\\u0430\\u0440\\u043E\\u043B\\u044E:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"requirements-checkboxes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: `requirement ${passwordCriteria.length ? 'valid' : 'invalid'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: passwordCriteria.length,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }), \" \\u041C\\u0438\\u043D\\u0438\\u043C\\u0443\\u043C 8 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: `requirement ${passwordCriteria.uppercase ? 'valid' : 'invalid'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: passwordCriteria.uppercase,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }), \" \\u041C\\u0438\\u043D\\u0438\\u043C\\u0443\\u043C 1 \\u0437\\u0430\\u0433\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F \\u0431\\u0443\\u043A\\u0432\\u0430\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: `requirement ${passwordCriteria.lowercase ? 'valid' : 'invalid'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: passwordCriteria.lowercase,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }), \" \\u041C\\u0438\\u043D\\u0438\\u043C\\u0443\\u043C 1 \\u0441\\u0442\\u0440\\u043E\\u0447\\u043D\\u0430\\u044F \\u0431\\u0443\\u043A\\u0432\\u0430\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: `requirement ${passwordCriteria.number ? 'valid' : 'invalid'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: passwordCriteria.number,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }), \" \\u041C\\u0438\\u043D\\u0438\\u043C\\u0443\\u043C 1 \\u0446\\u0438\\u0444\\u0440\\u0430\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: `requirement ${passwordCriteria.specialChar ? 'valid' : 'invalid'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: passwordCriteria.specialChar,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }), \" \\u041C\\u0438\\u043D\\u0438\\u043C\\u0443\\u043C 1 \\u0441\\u043F\\u0435\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, \"\\u0423 \\u0432\\u0430\\u0441 \\u0443\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442? \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigate('/login'),\n    className: \"link-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 33\n    }\n  }, \"\\u0412\\u0445\\u043E\\u0434\")));\n});\nexport default RegisterPage;","map":{"version":3,"names":["React","useEffect","useState","useCallback","useForm","useNavigate","CryptoJS","RegisterPage","memo","setMessage","register","handleSubmit","formState","errors","watch","navigate","showPassword","setShowPassword","passwordCriteria","setPasswordCriteria","length","uppercase","lowercase","number","specialChar","password","encryptionKey","setEncryptionKey","fetchEncryptionKey","response","fetch","method","headers","credentials","ok","keyHash","json","error","encryptData","data","jsonData","JSON","stringify","AES","encrypt","toString","fetchUserId","username","result","userId","onSubmit","url","encryptedData","body","state","message","checkPasswordCriteria","value","test","validateUsername","isValid","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","Object","assign","type","id","required","validate","onMouseDown","onMouseUp","onMouseLeave","checked","readOnly","onClick"],"sources":["C:/Users/blank/auth-demo/src/RegisterPage.tsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport CryptoJS from 'crypto-js';\r\nimport './App.css';\r\n\r\ninterface FormData {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\ninterface RegisterPageProps {\r\n  setMessage: (message: string) => void;\r\n}\r\n\r\nconst RegisterPage: React.FC<RegisterPageProps> = React.memo(({ setMessage }) => {\r\n  const { register, handleSubmit, formState: { errors }, watch } = useForm<FormData>();\r\n  const navigate = useNavigate();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [passwordCriteria, setPasswordCriteria] = useState({\r\n    length: false,\r\n    uppercase: false,\r\n    lowercase: false,\r\n    number: false,\r\n    specialChar: false,\r\n  });\r\n\r\n  const password = watch('password', '');\r\n  const [encryptionKey, setEncryptionKey] = useState<string | null>(null);\r\n\r\n  const fetchEncryptionKey = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/generate-key', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n      });\r\n      if (response.ok) {\r\n        const { keyHash } = await response.json();\r\n        setEncryptionKey(keyHash);\r\n      } else {\r\n        setMessage('Ошибка при получении ключа шифрования');\r\n      }\r\n    } catch (error) {\r\n      setMessage('Ошибка сети при получении ключа шифрования');\r\n    }\r\n  };\r\n\r\n  const encryptData = (data: FormData) => {\r\n    const jsonData = JSON.stringify(data);\r\n    return CryptoJS.AES.encrypt(jsonData, encryptionKey!).toString();\r\n  };\r\n\r\n  const fetchUserId = async (username: string) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/get-user-id?username=${username}`, {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        return result.userId;\r\n      } else {\r\n        setMessage('Ошибка при получении ID пользователя');\r\n      }\r\n    } catch (error) {\r\n      setMessage('Ошибка сети при получении ID пользователя');\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data: FormData) => {\r\n    const url = 'http://localhost:5000/register';\r\n    const encryptedData = encryptData(data);\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ encryptedData, encryptionKey }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setMessage('Регистрация прошла успешно');\r\n\r\n        const userId = await fetchUserId(data.username);\r\n\r\n        if (userId) {\r\n          navigate('/additional-data', { state: { userId } });\r\n        }\r\n      } else {\r\n        const result = await response.json();\r\n        setMessage(result.message || 'Ошибка при регистрации');\r\n      }\r\n    } catch (error) {\r\n      setMessage('Ошибка сети при регистрации');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEncryptionKey();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setMessage('');\r\n  }, [setMessage]);\r\n\r\n  const checkPasswordCriteria = useCallback((value: string) => {\r\n    setPasswordCriteria({\r\n      length: value.length >= 8,\r\n      uppercase: /[A-Z]/.test(value),\r\n      lowercase: /[a-z]/.test(value),\r\n      number: /\\d/.test(value),\r\n      specialChar: /[!@#$%^&*(),.?\":{}|<>]/.test(value),\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    checkPasswordCriteria(password);\r\n  }, [password, checkPasswordCriteria]);\r\n\r\n  const validateUsername = (value: string) => {\r\n    const isValid = /^[A-Za-z0-9_]+$/.test(value);\r\n    if (!isValid) {\r\n      return 'Логин может содержать только буквы, цифры и символ \"_\"';\r\n    }\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>Регистрация</h1>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Логин:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            {...register('username', { \r\n              required: 'Логин обязателен',\r\n              validate: validateUsername\r\n            })}\r\n            className={errors.username ? 'error' : ''}\r\n          />\r\n          {errors.username && <p className=\"error-message\">{errors.username.message}</p>}\r\n        </div>\r\n        <div className=\"form-group password-group\">\r\n          <label htmlFor=\"password\">Пароль:</label>\r\n          <div className=\"password-input\">\r\n            <input\r\n              type={showPassword ? 'text' : 'password'}\r\n              id=\"password\"\r\n              {...register('password', { required: 'Пароль обязателен' })}\r\n              className={errors.password ? 'error' : ''}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onMouseDown={() => setShowPassword(true)}\r\n              onMouseUp={() => setShowPassword(false)}\r\n              onMouseLeave={() => setShowPassword(false)}\r\n              className=\"toggle-password-visibility\"\r\n            >\r\n              👁️\r\n            </button>\r\n          </div>\r\n          {errors.password && <p className=\"error-message\">{errors.password.message}</p>}\r\n        </div>\r\n\r\n        <div className=\"password-requirements\">\r\n          <h3>Требования к паролю:</h3>\r\n          <div className=\"requirements-checkboxes\">\r\n            <label className={`requirement ${passwordCriteria.length ? 'valid' : 'invalid'}`}>\r\n              <input type=\"checkbox\" checked={passwordCriteria.length} readOnly /> Минимум 8 символов\r\n            </label>\r\n            <label className={`requirement ${passwordCriteria.uppercase ? 'valid' : 'invalid'}`}>\r\n              <input type=\"checkbox\" checked={passwordCriteria.uppercase} readOnly /> Минимум 1 заглавная буква\r\n            </label>\r\n            <label className={`requirement ${passwordCriteria.lowercase ? 'valid' : 'invalid'}`}>\r\n              <input type=\"checkbox\" checked={passwordCriteria.lowercase} readOnly /> Минимум 1 строчная буква\r\n            </label>\r\n            <label className={`requirement ${passwordCriteria.number ? 'valid' : 'invalid'}`}>\r\n              <input type=\"checkbox\" checked={passwordCriteria.number} readOnly /> Минимум 1 цифра\r\n            </label>\r\n            <label className={`requirement ${passwordCriteria.specialChar ? 'valid' : 'invalid'}`}>\r\n              <input type=\"checkbox\" checked={passwordCriteria.specialChar} readOnly /> Минимум 1 специальный символ\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"submit-button\">Зарегистрироваться</button>\r\n      </form>\r\n      <p>\r\n        У вас уже есть аккаунт? <button onClick={() => navigate('/login')} className=\"link-button\">Вход</button>\r\n      </p>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default RegisterPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}