{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blank\\\\auth-demo\\\\src\\\\HomePage.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport CryptoJS from 'crypto-js';\nimport './App.css';\nconst HomePage = ({\n  setMessage,\n  setIsAuthenticated,\n  setUsername\n}) => {\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const [remainingAttempts, setRemainingAttempts] = useState(null);\n  const [encryptionKey, setEncryptionKey] = useState('');\n  useEffect(() => {\n    const fetchEncryptionKey = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/generate-key', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setEncryptionKey(data.keyHash);\n        } else {\n          console.error('Ошибка при получении хэша ключа');\n        }\n      } catch (error) {\n        console.error('Ошибка сети при получении ключа:', error);\n      }\n    };\n    fetchEncryptionKey();\n  }, []);\n  const onSubmit = async data => {\n    try {\n      const encryptedData = CryptoJS.AES.encrypt(JSON.stringify(data), encryptionKey).toString();\n      const response = await fetch('http://localhost:5000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          encryptedData,\n          encryptionKeyHash: encryptionKey\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setIsAuthenticated(true);\n        setUsername(result.user.username);\n        navigate('/welcome');\n      } else {\n        const result = await response.json();\n        setMessage(result.message || 'Ошибка');\n        if (result.attemptsLeft !== undefined) setRemainingAttempts(result.attemptsLeft);\n      }\n    } catch {\n      setMessage('Ошибка сети');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"\\u0412\\u0445\\u043E\\u0434\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"\\u041B\\u043E\\u0433\\u0438\\u043D:\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    id: \"username\"\n  }, register('username', {\n    required: 'Логин обязателен'\n  }), {\n    className: errors.username ? 'error' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), errors.username && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 31\n    }\n  }, errors.username.message)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group password-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"password-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: showPassword ? 'text' : 'password',\n    id: \"password\"\n  }, register('password', {\n    required: 'Пароль обязателен'\n  }), {\n    className: errors.password ? 'error' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onMouseDown: () => setShowPassword(true),\n    onMouseUp: () => setShowPassword(false),\n    onMouseLeave: () => setShowPassword(false),\n    className: \"toggle-password-visibility\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"\\uD83D\\uDC41\\uFE0F\")), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 31\n    }\n  }, errors.password.message)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\")), remainingAttempts !== null && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"attempts-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 38\n    }\n  }, \"\\u041E\\u0441\\u0442\\u0430\\u043B\\u043E\\u0441\\u044C \\u043F\\u043E\\u043F\\u044B\\u0442\\u043E\\u043A: \", remainingAttempts), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"\\u0423 \\u0432\\u0430\\u0441 \\u043D\\u0435\\u0442 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430? \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigate('/register'),\n    className: \"link-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\")));\n};\nexport default HomePage;","map":{"version":3,"names":["React","useEffect","useState","useForm","useNavigate","CryptoJS","HomePage","setMessage","setIsAuthenticated","setUsername","register","handleSubmit","formState","errors","navigate","showPassword","setShowPassword","remainingAttempts","setRemainingAttempts","encryptionKey","setEncryptionKey","fetchEncryptionKey","response","fetch","method","headers","ok","data","json","keyHash","console","error","onSubmit","encryptedData","AES","encrypt","JSON","stringify","toString","credentials","body","encryptionKeyHash","result","user","username","message","attemptsLeft","undefined","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","Object","assign","type","id","required","password","onMouseDown","onMouseUp","onMouseLeave","onClick"],"sources":["C:/Users/blank/auth-demo/src/HomePage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport CryptoJS from 'crypto-js';\r\nimport './App.css';\r\n\r\ninterface FormData {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\ninterface HomePageProps {\r\n  setMessage: (message: string) => void;\r\n  setIsAuthenticated: (isAuthenticated: boolean) => void;\r\n  setUsername: (username: string) => void;\r\n}\r\n\r\nconst HomePage: React.FC<HomePageProps> = ({ setMessage, setIsAuthenticated, setUsername }) => {\r\n  const { register, handleSubmit, formState: { errors } } = useForm<FormData>();\r\n  const navigate = useNavigate();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [remainingAttempts, setRemainingAttempts] = useState<number | null>(null);\r\n  const [encryptionKey, setEncryptionKey] = useState('');\r\n  \r\n \r\n\r\n  useEffect(() => {\r\n    const fetchEncryptionKey = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/generate-key', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setEncryptionKey(data.keyHash);\r\n        } else {\r\n          console.error('Ошибка при получении хэша ключа');\r\n        }\r\n      } catch (error) {\r\n        console.error('Ошибка сети при получении ключа:', error);\r\n      }\r\n    };\r\n\r\n    fetchEncryptionKey();\r\n  }, []);\r\n\r\n  const onSubmit = async (data: FormData) => {\r\n    try {\r\n      const encryptedData = CryptoJS.AES.encrypt(JSON.stringify(data), encryptionKey).toString();\r\n      const response = await fetch('http://localhost:5000/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ encryptedData, encryptionKeyHash: encryptionKey }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        setIsAuthenticated(true);\r\n        setUsername(result.user.username);\r\n        navigate('/welcome');\r\n      } else {\r\n        const result = await response.json();\r\n        setMessage(result.message || 'Ошибка');\r\n        if (result.attemptsLeft !== undefined) setRemainingAttempts(result.attemptsLeft);\r\n      }\r\n    } catch {\r\n      setMessage('Ошибка сети');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>Вход</h1>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Логин:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            {...register('username', { required: 'Логин обязателен' })}\r\n            className={errors.username ? 'error' : ''}\r\n          />\r\n          {errors.username && <p className=\"error-message\">{errors.username.message}</p>}\r\n        </div>\r\n        <div className=\"form-group password-group\">\r\n          <label htmlFor=\"password\">Пароль:</label>\r\n          <div className=\"password-input\">\r\n            <input\r\n              type={showPassword ? 'text' : 'password'}\r\n              id=\"password\"\r\n              {...register('password', { required: 'Пароль обязателен' })}\r\n              className={errors.password ? 'error' : ''}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onMouseDown={() => setShowPassword(true)}\r\n              onMouseUp={() => setShowPassword(false)}\r\n              onMouseLeave={() => setShowPassword(false)}\r\n              className=\"toggle-password-visibility\"\r\n            >\r\n              👁️\r\n            </button>\r\n          </div>\r\n          {errors.password && <p className=\"error-message\">{errors.password.message}</p>}\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"submit-button\">Войти</button>\r\n      </form>\r\n      {remainingAttempts !== null && <p className=\"attempts-message\">Осталось попыток: {remainingAttempts}</p>}\r\n      <p>\r\n        У вас нет аккаунта? <button onClick={() => navigate('/register')} className=\"link-button\">Регистрация</button>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}